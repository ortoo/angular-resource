'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.apply = apply;
var ArrayProto = Array.prototype;

// Make the standard ES5 array transformations work as expected...

function apply(qry) {

  // These methods create new arrays
  ['filter', 'map', 'slice'].forEach(newArrayTransform);

  ['reverse', 'sort', 'splice'].forEach(inPlaceTransform);

  function inPlaceTransform(name) {
    qry[name] = function () {
      var transformArgs = arguments;
      qry.$emitter.on('update', function () {
        ArrayProto[name].apply(qry, transformArgs);
      });

      ArrayProto[name].apply(qry, transformArgs);
      return qry;
    };
  }

  function newArrayTransform(name) {
    qry[name] = function () {
      var newArr = [];
      var transformArgs = arguments;
      qry.$emitter.on('update', function () {
        updateNewArr(ArrayProto[name].apply(qry, transformArgs));
      });

      updateNewArr(ArrayProto[name].apply(qry, transformArgs));

      function updateNewArr(arr) {
        newArr.length = 0;
        for (var i = 0; i < arr.length; i++) {
          newArr.push(arr[i]);
        }
      }

      return newArr;
    };
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXJ5LXRyYW5zZm9ybXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBSSxVQUFVLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQzs7OztBQUcxQixTQUFTLEtBQUssQ0FBQyxHQUFHLEVBQUU7OztBQUd6QixHQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7O0FBRXRELEdBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQzs7QUFFeEQsV0FBUyxnQkFBZ0IsQ0FBQyxJQUFJLEVBQUU7QUFDOUIsT0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLFlBQVc7QUFDckIsVUFBSSxhQUFhLEdBQUcsU0FBUyxDQUFDO0FBQzlCLFNBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxZQUFXO0FBQ25DLGtCQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxhQUFhLENBQUMsQ0FBQztPQUM1QyxDQUFDLENBQUM7O0FBRUgsZ0JBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLGFBQWEsQ0FBQyxDQUFDO0FBQzNDLGFBQU8sR0FBRyxDQUFDO0tBQ1osQ0FBQztHQUNIOztBQUVELFdBQVMsaUJBQWlCLENBQUMsSUFBSSxFQUFFO0FBQy9CLE9BQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxZQUFXO0FBQ3JCLFVBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztBQUNoQixVQUFJLGFBQWEsR0FBRyxTQUFTLENBQUM7QUFDOUIsU0FBRyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLFlBQVc7QUFDbkMsb0JBQVksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxhQUFhLENBQUMsQ0FBQyxDQUFDO09BQzFELENBQUMsQ0FBQzs7QUFFSCxrQkFBWSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLGFBQWEsQ0FBQyxDQUFDLENBQUM7O0FBRXpELGVBQVMsWUFBWSxDQUFDLEdBQUcsRUFBRTtBQUN6QixjQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztBQUNsQixhQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUNuQyxnQkFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNyQjtPQUNGOztBQUVELGFBQU8sTUFBTSxDQUFDO0tBQ2YsQ0FBQztHQUNIO0NBQ0YiLCJmaWxlIjoicXVlcnktdHJhbnNmb3Jtcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBBcnJheVByb3RvID0gQXJyYXkucHJvdG90eXBlO1xuXG4vLyBNYWtlIHRoZSBzdGFuZGFyZCBFUzUgYXJyYXkgdHJhbnNmb3JtYXRpb25zIHdvcmsgYXMgZXhwZWN0ZWQuLi5cbmV4cG9ydCBmdW5jdGlvbiBhcHBseShxcnkpIHtcblxuICAvLyBUaGVzZSBtZXRob2RzIGNyZWF0ZSBuZXcgYXJyYXlzXG4gIFsnZmlsdGVyJywgJ21hcCcsICdzbGljZSddLmZvckVhY2gobmV3QXJyYXlUcmFuc2Zvcm0pO1xuXG4gIFsncmV2ZXJzZScsICdzb3J0JywgJ3NwbGljZSddLmZvckVhY2goaW5QbGFjZVRyYW5zZm9ybSk7XG5cbiAgZnVuY3Rpb24gaW5QbGFjZVRyYW5zZm9ybShuYW1lKSB7XG4gICAgcXJ5W25hbWVdID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgdHJhbnNmb3JtQXJncyA9IGFyZ3VtZW50cztcbiAgICAgIHFyeS4kZW1pdHRlci5vbigndXBkYXRlJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIEFycmF5UHJvdG9bbmFtZV0uYXBwbHkocXJ5LCB0cmFuc2Zvcm1BcmdzKTtcbiAgICAgIH0pO1xuXG4gICAgICBBcnJheVByb3RvW25hbWVdLmFwcGx5KHFyeSwgdHJhbnNmb3JtQXJncyk7XG4gICAgICByZXR1cm4gcXJ5O1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBuZXdBcnJheVRyYW5zZm9ybShuYW1lKSB7XG4gICAgcXJ5W25hbWVdID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgbmV3QXJyID0gW107XG4gICAgICB2YXIgdHJhbnNmb3JtQXJncyA9IGFyZ3VtZW50cztcbiAgICAgIHFyeS4kZW1pdHRlci5vbigndXBkYXRlJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIHVwZGF0ZU5ld0FycihBcnJheVByb3RvW25hbWVdLmFwcGx5KHFyeSwgdHJhbnNmb3JtQXJncykpO1xuICAgICAgfSk7XG5cbiAgICAgIHVwZGF0ZU5ld0FycihBcnJheVByb3RvW25hbWVdLmFwcGx5KHFyeSwgdHJhbnNmb3JtQXJncykpO1xuXG4gICAgICBmdW5jdGlvbiB1cGRhdGVOZXdBcnIoYXJyKSB7XG4gICAgICAgIG5ld0Fyci5sZW5ndGggPSAwO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIG5ld0Fyci5wdXNoKGFycltpXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5ld0FycjtcbiAgICB9O1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
